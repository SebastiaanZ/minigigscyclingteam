# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: lint
    displayName: 'flake8 linting'

    pool:
      vmImage: 'Ubuntu 18.04'

    variables:
      PIP_CACHE_DIR: ".cache/pip"
      PIP_SRC: ".cache/src"

    steps:
      - task: UsePythonVersion@0
        displayName: 'Set Python version'
        inputs:
          versionSpec: '3.7.x'
          addToPath: true

      - script: python -m pip install setuptools
        displayName: 'Install base dependencies'

      - script: python -m pip install pipenv && pipenv install --dev --system && python -m pip install flake8-formatter-junit-xml
        displayName: 'Install Project Environment'

      - script: python -m flake8
        displayName: 'Lint the project'

  - job: docker
    displayName: 'Build & Push Job'
    dependsOn: lint
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: ubuntu-18.04

    steps:
      - task: Docker@1
        displayName: Login to Docker Hub

        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'minigigscyclingteam-website'
          command: 'login'

      - script: |
          docker build -t minigigscyclingteam/website:latest -f docker/app/Dockerfile .
          docker push minigigscyclingteam/website:latest
        displayName: 'Build & Push Docker Image'
